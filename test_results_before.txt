warning: unused import: `error`
 --> src/services/chat/streaming.rs:6:28
  |
6 | use tracing::{debug, info, error};
  |                            ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `DateTime` and `Utc`
 --> src/services/memory/types.rs:4:14
  |
4 | use chrono::{DateTime, Utc};
  |              ^^^^^^^^  ^^^

warning: unused import: `warn`
 --> src/services/memory/summarization.rs:7:28
  |
7 | use tracing::{info, debug, warn};
  |                            ^^^^

warning: unused import: `crate::llm::embeddings::EmbeddingHead`
 --> src/services/memory/summarization.rs:9:5
  |
9 | use crate::llm::embeddings::EmbeddingHead;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `info`
 --> src/services/summarization.rs:4:22
  |
4 | use tracing::{debug, info};
  |                      ^^^^

warning: field `addr` is never read
  --> src/api/ws/chat/message_router.rs:27:5
   |
24 | pub struct MessageRouter {
   |            ------------- field in this struct
...
27 |     addr: SocketAddr,
   |     ^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `id` is never read
  --> src/api/ws/files.rs:27:5
   |
26 | struct UploadSession {
   |        ------------- field in this struct
27 |     id: String,
   |     ^^
   |
   = note: `UploadSession` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `project_id` is never read
  --> src/api/ws/files.rs:41:5
   |
37 | struct UploadStartRequest {
   |        ------------------ field in this struct
...
41 |     project_id: Option<String>,  // For associating with projects
   |     ^^^^^^^^^^

warning: field `project_id` is never read
  --> src/api/ws/files.rs:63:5
   |
60 | struct DownloadRequest {
   |        --------------- field in this struct
...
63 |     project_id: Option<String>,
   |     ^^^^^^^^^^
   |
   = note: `DownloadRequest` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `model` is never read
   --> src/llm/client/embedding.rs:241:5
    |
239 | struct EmbeddingResponse {
    |        ----------------- field in this struct
240 |     data: Vec<EmbeddingData>,
241 |     model: String,
    |     ^^^^^
    |
    = note: `EmbeddingResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: function `merge_and_deduplicate_results` is never used
   --> src/memory/parallel_recall.rs:278:4
    |
278 | fn merge_and_deduplicate_results(
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `RecallParams` is never constructed
  --> src/services/memory/types.rs:67:12
   |
67 | pub struct RecallParams {
   |            ^^^^^^^^^^^^
   |
   = note: `RecallParams` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: struct `RecallResult` is never constructed
  --> src/services/memory/types.rs:78:12
   |
78 | pub struct RecallResult {
   |            ^^^^^^^^^^^^
   |
   = note: `RecallResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: struct `ClassificationResult` is never constructed
   --> src/services/memory/types.rs:105:12
    |
105 | pub struct ClassificationResult {
    |            ^^^^^^^^^^^^^^^^^^^^
    |
    = note: `ClassificationResult` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `VectorStore`, `LlmApi`, `Classification`, `Embedding`, `SessionNotFound`, and `Configuration` are never constructed
   --> src/services/memory/types.rs:121:5
    |
116 | pub enum MemoryError {
    |          ----------- variants in this enum
...
121 |     VectorStore(String),
    |     ^^^^^^^^^^^
...
124 |     LlmApi(String),
    |     ^^^^^^
...
127 |     Classification(String),
    |     ^^^^^^^^^^^^^^
...
130 |     Embedding(String),
    |     ^^^^^^^^^
...
133 |     SessionNotFound(String),
    |     ^^^^^^^^^^^^^^^
...
136 |     Configuration(String),
    |     ^^^^^^^^^^^^^
    |
    = note: `MemoryError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: associated items `with_config`, `parse_memory_type`, `to_classification_result`, and `get_routing_stats` are never used
   --> src/services/memory/classification.rs:33:12
    |
21  | impl MessageClassifier {
    | ---------------------- associated items in this implementation
...
33  |     pub fn with_config(
    |            ^^^^^^^^^^^
...
176 |     pub fn parse_memory_type(&self, type_str: &str) -> MemoryType {
    |            ^^^^^^^^^^^^^^^^^
...
189 |     pub fn to_classification_result(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
214 |     pub fn get_routing_stats(&self) -> String {
    |            ^^^^^^^^^^^^^^^^^

warning: associated items `with_config`, `generate_single_embedding`, `calculate_api_savings`, and `config` are never used
   --> src/services/memory/embedding.rs:31:12
    |
20  | impl EmbeddingManager {
    | --------------------- associated items in this implementation
...
31  |     pub fn with_config(
    |            ^^^^^^^^^^^
...
200 |     pub async fn generate_single_embedding(&self, text: &str) -> Result<Vec<f32>> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^
...
214 |     pub fn calculate_api_savings(&self, total_chunks: usize) -> (usize, usize, f32) {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
228 |     pub fn config(&self) -> &BatchEmbeddingConfig {
    |            ^^^^^^

warning: associated items `with_weights`, `filter_by_threshold`, `top_k`, and `analyze_distribution` are never used
   --> src/services/memory/scoring.rs:34:12
    |
20  | impl MemoryScorer {
    | ----------------- associated items in this implementation
...
34  |     pub fn with_weights(
    |            ^^^^^^^^^^^^
...
180 |     pub fn filter_by_threshold(
    |            ^^^^^^^^^^^^^^^^^^^
...
202 |     pub fn top_k(entries: Vec<ScoredMemoryEntry>, k: usize) -> Vec<ScoredMemoryEntry> {
    |            ^^^^^
...
207 |     pub fn analyze_distribution(entries: &[ScoredMemoryEntry]) -> ScoreDistribution {
    |            ^^^^^^^^^^^^^^^^^^^^

warning: fields `count`, `mean`, `std_dev`, `min`, `max`, and `median` are never read
   --> src/services/memory/scoring.rs:239:9
    |
238 | pub struct ScoreDistribution {
    |            ----------------- fields in this struct
239 |     pub count: usize,
    |         ^^^^^
240 |     pub mean: f32,
    |         ^^^^
241 |     pub std_dev: f32,
    |         ^^^^^^^
242 |     pub min: f32,
    |         ^^^
243 |     pub max: f32,
    |         ^^^
244 |     pub median: f32,
    |         ^^^^^^
    |
    = note: `ScoreDistribution` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `created_at` is never read
  --> src/services/memory/session.rs:19:9
   |
18 | pub struct SessionMetadata {
   |            --------------- field in this struct
19 |     pub created_at: chrono::DateTime<chrono::Utc>,
   |         ^^^^^^^^^^
   |
   = note: `SessionMetadata` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: methods `reset_counter`, `increment_by`, `get_metadata`, `list_active_sessions`, `deactivate_session`, and `get_stats` are never used
   --> src/services/memory/session.rs:59:18
    |
26  | impl SessionManager {
    | ------------------- methods in this implementation
...
59  |     pub async fn reset_counter(&self, session_id: &str) {
    |                  ^^^^^^^^^^^^^
...
66  |     pub async fn increment_by(&self, session_id: &str, amount: usize) -> usize {
    |                  ^^^^^^^^^^^^
...
109 |     pub async fn get_metadata(&self, session_id: &str) -> Option<SessionMetadata> {
    |                  ^^^^^^^^^^^^
...
115 |     pub async fn list_active_sessions(&self) -> Vec<(String, usize)> {
    |                  ^^^^^^^^^^^^^^^^^^^^
...
130 |     pub async fn deactivate_session(&self, session_id: &str) {
    |                  ^^^^^^^^^^^^^^^^^^
...
169 |     pub async fn get_stats(&self) -> SessionStats {
    |                  ^^^^^^^^^

warning: struct `SessionStats` is never constructed
   --> src/services/memory/session.rs:194:12
    |
194 | pub struct SessionStats {
    |            ^^^^^^^^^^^^
    |
    = note: `SessionStats` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: associated items `with_config`, `create_hierarchical_summary`, and `get_summary_stats` are never used
   --> src/services/memory/summarization.rs:34:12
    |
22  | impl SummarizationEngine {
    | ------------------------ associated items in this implementation
...
34  |     pub fn with_config(
    |            ^^^^^^^^^^^
...
246 |     pub async fn create_hierarchical_summary(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
289 |     pub fn get_summary_stats(&self) -> String {
    |            ^^^^^^^^^^^^^^^^^

warning: field `git_client` is never read
  --> src/services/file_search.rs:18:5
   |
16 | pub struct FileSearchService {
   |            ----------------- field in this struct
17 |     vector_store_manager: Arc<VectorStoreManager>,
18 |     git_client: GitClient,
   |     ^^^^^^^^^^
   |
   = note: `FileSearchService` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: `mira-backend` (lib) generated 24 warnings (run `cargo fix --lib -p mira-backend` to apply 5 suggestions)
warning: unused import: `FileNodeType`
  --> src/git/client/mod.rs:21:34
   |
21 | pub use tree_builder::{FileNode, FileNodeType, TreeBuilder};
   |                                  ^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `error`
 --> src/services/chat/streaming.rs:6:28
  |
6 | use tracing::{debug, info, error};
  |                            ^^^^^

warning: unused imports: `RoutingStats` and `ScoredMemoryEntry`
  --> src/services/memory/mod.rs:28:5
   |
28 |     ScoredMemoryEntry, 
   |     ^^^^^^^^^^^^^^^^^
29 |     MemoryServiceStats, 
30 |     RoutingStats,
   |     ^^^^^^^^^^^^

warning: function `ws_router` is never used
  --> src/api/ws/mod.rs:31:8
   |
31 | pub fn ws_router(app_state: Arc<AppState>) -> Router {
   |        ^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: methods `handle_message` and `subscribe` are never used
  --> src/api/ws/mod.rs:54:18
   |
48 | impl WsManager {
   | -------------- methods in this implementation
...
54 |     pub async fn handle_message(&self, msg: String) -> Result<(), anyhow::Error> {
   |                  ^^^^^^^^^^^^^^
...
60 |     pub fn subscribe(&self) -> tokio::sync::mpsc::Receiver<String> {
   |            ^^^^^^^^^

warning: function `setup_ws_manager` is never used
  --> src/api/ws/mod.rs:67:8
   |
67 | pub fn setup_ws_manager() -> Arc<WsManager> {
   |        ^^^^^^^^^^^^^^^^

warning: function `websocket_handler` is never used
  --> src/api/ws/mod.rs:72:14
   |
72 | pub async fn websocket_handler(
   |              ^^^^^^^^^^^^^^^^^

warning: function `handle_test_socket` is never used
  --> src/api/ws/mod.rs:79:10
   |
79 | async fn handle_test_socket(socket: WebSocket, _state: Arc<AppState>) {
   |          ^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `send_pong`, `update_activity`, `get_last_activity_ref`, and `get_is_processing_ref` are never used
   --> src/api/ws/chat/connection.rs:27:12
    |
25  | impl WebSocketConnection {
    | ------------------------ associated items in this implementation
26  |     /// Creates a new connection from a raw WebSocket socket.
27  |     pub fn new(socket: WebSocket) -> Self {
    |            ^^^
...
86  |     pub async fn send_pong(&self, data: Vec<u8>) -> Result<()> {
    |                  ^^^^^^^^^
...
94  |     pub async fn update_activity(&self) { *self.last_activity.lock().await = Instant::now(); }
    |                  ^^^^^^^^^^^^^^^
...
102 |     pub fn get_last_activity_ref(&self) -> Arc<Mutex<Instant>> { self.last_activity.clone() }
    |            ^^^^^^^^^^^^^^^^^^^^^
103 |     pub fn get_is_processing_ref(&self) -> Arc<Mutex<bool>> { self.is_processing.clone() }
    |            ^^^^^^^^^^^^^^^^^^^^^

warning: field `addr` is never read
  --> src/api/ws/chat/message_router.rs:27:5
   |
24 | pub struct MessageRouter {
   |            ------------- field in this struct
...
27 |     addr: SocketAddr,
   |     ^^^^

warning: function `extract_file_context` is never used
   --> src/api/ws/chat/message_router.rs:398:8
    |
398 | pub fn extract_file_context(metadata: &Option<MessageMetadata>) -> Option<String> {
    |        ^^^^^^^^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/api/ws/chat/heartbeat.rs:44:12
   |
31 | impl HeartbeatConfig {
   | -------------------- associated function in this implementation
...
44 |     pub fn new(
   |            ^^^

warning: associated function `new_with_config` is never used
  --> src/api/ws/chat/heartbeat.rs:71:12
   |
63 | impl HeartbeatManager {
   | --------------------- associated function in this implementation
...
71 |     pub fn new_with_config(
   |            ^^^^^^^^^^^^^^^

warning: fields `heartbeats_sent`, `last_heartbeat`, `connection_duration`, and `timeouts` are never read
   --> src/api/ws/chat/heartbeat.rs:149:9
    |
148 | pub struct HeartbeatStats {
    |            -------------- fields in this struct
149 |     pub heartbeats_sent: u64,
    |         ^^^^^^^^^^^^^^^
150 |     pub last_heartbeat: Option<std::time::Instant>,
    |         ^^^^^^^^^^^^^^
151 |     pub connection_duration: std::time::Duration,
    |         ^^^^^^^^^^^^^^^^^^^
152 |     pub timeouts: u64,
    |         ^^^^^^^^
    |
    = note: `HeartbeatStats` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: methods `record_heartbeat`, `record_timeout`, and `update_duration` are never used
   --> src/api/ws/chat/heartbeat.rs:171:12
    |
161 | impl HeartbeatStats {
    | ------------------- methods in this implementation
...
171 |     pub fn record_heartbeat(&mut self) {
    |            ^^^^^^^^^^^^^^^^
...
176 |     pub fn record_timeout(&mut self) {
    |            ^^^^^^^^^^^^^^
...
180 |     pub fn update_duration(&mut self, duration: std::time::Duration) {
    |            ^^^^^^^^^^^^^^^

warning: function `route_tool_message` is never used
   --> src/api/ws/chat_tools/mod.rs:110:14
    |
110 | pub async fn route_tool_message(
    |              ^^^^^^^^^^^^^^^^^^

warning: fields `max_tools`, `tool_timeout_secs`, `max_output_tokens`, and `reasoning_effort` are never read
  --> src/api/ws/chat_tools/executor.rs:26:9
   |
24 | pub struct ToolConfig {
   |            ---------- fields in this struct
25 |     pub enable_tools: bool,
26 |     pub max_tools: usize,
   |         ^^^^^^^^^
27 |     pub tool_timeout_secs: u64,
   |         ^^^^^^^^^^^^^^^^^
28 |     pub model: String,
29 |     pub max_output_tokens: usize,
   |         ^^^^^^^^^^^^^^^^^
30 |     pub reasoning_effort: String,
   |         ^^^^^^^^^^^^^^^^
   |
   = note: `ToolConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: methods `with_model`, `with_max_output_tokens`, `with_tools_enabled`, and `with_reasoning_effort` are never used
  --> src/api/ws/chat_tools/executor.rs:49:12
   |
47 | impl ToolConfig {
   | --------------- methods in this implementation
48 |     /// Overrides the model in the current configuration.
49 |     pub fn with_model(mut self, model: String) -> Self {
   |            ^^^^^^^^^^
...
55 |     pub fn with_max_output_tokens(mut self, tokens: usize) -> Self {
   |            ^^^^^^^^^^^^^^^^^^^^^^
...
61 |     pub fn with_tools_enabled(mut self, enabled: bool) -> Self {
   |            ^^^^^^^^^^^^^^^^^^
...
67 |     pub fn with_reasoning_effort(mut self, effort: String) -> Self {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: fields `project_id`, `metadata`, and `context` are never read
  --> src/api/ws/chat_tools/executor.rs:77:9
   |
75 | pub struct ToolChatRequest {
   |            --------------- fields in this struct
76 |     pub content: String,
77 |     pub project_id: Option<String>,
   |         ^^^^^^^^^^
78 |     pub metadata: Option<MessageMetadata>,
   |         ^^^^^^^^
79 |     pub session_id: String,
80 |     pub context: RecallContext,
   |         ^^^^^^^
   |
   = note: `ToolChatRequest` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: struct `ToolChatResponse` is never constructed
  --> src/api/ws/chat_tools/executor.rs:86:12
   |
86 | pub struct ToolChatResponse {
   |            ^^^^^^^^^^^^^^^^
   |
   = note: `ToolChatResponse` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: struct `ToolCallResult` is never constructed
  --> src/api/ws/chat_tools/executor.rs:94:12
   |
94 | pub struct ToolCallResult {
   |            ^^^^^^^^^^^^^^
   |
   = note: `ToolCallResult` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: enum `ToolCallStatus` is never used
   --> src/api/ws/chat_tools/executor.rs:104:10
    |
104 | pub enum ToolCallStatus {
    |          ^^^^^^^^^^^^^^
    |
    = note: `ToolCallStatus` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `response_id` is never read
   --> src/api/ws/chat_tools/executor.rs:116:9
    |
112 | pub struct ResponseMetadata {
    |            ---------------- field in this struct
...
116 |     pub response_id: Option<String>,
    |         ^^^^^^^^^^^
    |
    = note: `ResponseMetadata` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variant `ImageGenerated` is never constructed
   --> src/api/ws/chat_tools/executor.rs:137:5
    |
121 | pub enum ToolEvent {
    |          --------- variant in this enum
...
137 |     ImageGenerated {
    |     ^^^^^^^^^^^^^^
    |
    = note: `ToolEvent` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `image_generation_manager` and `file_search_service` are never read
   --> src/api/ws/chat_tools/executor.rs:151:9
    |
149 | pub struct ToolExecutor {
    |            ------------ fields in this struct
150 |     responses_manager: Arc<ResponsesManager>,
151 |     pub image_generation_manager: Option<Arc<ImageGenerationManager>>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^
152 |     pub file_search_service: Option<Arc<FileSearchService>>,
    |         ^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/api/ws/chat_tools/executor.rs:158:12
    |
156 | impl ToolExecutor {
    | ----------------- associated items in this implementation
157 |     /// Creates a new tool executor with default settings.
158 |     pub fn new(responses_manager: Arc<ResponsesManager>) -> Self {
    |            ^^^
...
180 |     pub fn from_app_state_with_config(app_state: &Arc<AppState>, config: ToolConfig) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
194 |     pub fn with_config(responses_manager: Arc<ResponsesManager>, config: ToolConfig) -> Self {
    |            ^^^^^^^^^^^
...
208 |     pub fn with_image_generation_manager(mut self, manager: Arc<ImageGenerationManager>) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
214 |     pub fn with_file_search_service(mut self, service: Arc<FileSearchService>) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
220 |     pub fn update_config(&mut self, config: ToolConfig) {
    |            ^^^^^^^^^^^^^
...
231 |     pub fn get_model(&self) -> &str {
    |            ^^^^^^^^^
...
236 |     pub fn get_config(&self) -> &ToolConfig {
    |            ^^^^^^^^^^
...
330 |     pub async fn execute_image_generation(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
370 |     pub async fn execute_file_search(
    |                  ^^^^^^^^^^^^^^^^^^^
...
401 |     fn build_messages(&self, request: &ToolChatRequest) -> Result<Vec<ResponseMessage>> {
    |        ^^^^^^^^^^^^^^
...
428 |     pub async fn execute_with_tools(&self, request: &ToolChatRequest) -> Result<ToolChatResponse> {
    |                  ^^^^^^^^^^^^^^^^^^
...
461 |     pub fn get_stats(&self) -> Value {
    |            ^^^^^^^^^
...
477 |     pub fn validate_configuration(&self) -> Result<()> {
    |            ^^^^^^^^^^^^^^^^^^^^^^

warning: struct `PromptTemplates` is never constructed
  --> src/api/ws/chat_tools/prompt_builder.rs:11:12
   |
11 | pub struct PromptTemplates;
   |            ^^^^^^^^^^^^^^^

warning: associated constants `TOOL_SYSTEM_BASE` and `CONTEXT_SYSTEM_BASE` are never used
  --> src/api/ws/chat_tools/prompt_builder.rs:15:15
   |
13 | impl PromptTemplates {
   | -------------------- associated constants in this implementation
14 |     // Base templates use Mira's personality as the foundation
15 |     pub const TOOL_SYSTEM_BASE: &'static str = DEFAULT_PERSONA_PROMPT;
   |               ^^^^^^^^^^^^^^^^
16 |     pub const CONTEXT_SYSTEM_BASE: &'static str = DEFAULT_PERSONA_PROMPT;
   |               ^^^^^^^^^^^^^^^^^^^

warning: associated functions `build_simple_system_prompt` and `build_tool_specific_prompt` are never used
   --> src/api/ws/chat_tools/prompt_builder.rs:92:12
    |
22  | impl ToolPromptBuilder {
    | ---------------------- associated functions in this implementation
...
92  |     pub fn build_simple_system_prompt(context: &RecallContext, project_id: Option<&str>) -> String {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
112 |     pub fn build_tool_specific_prompt(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `id` and `created_at` are never read
  --> src/api/ws/files.rs:27:5
   |
26 | struct UploadSession {
   |        ------------- fields in this struct
27 |     id: String,
   |     ^^
...
33 |     created_at: chrono::DateTime<chrono::Utc>,
   |     ^^^^^^^^^^
   |
   = note: `UploadSession` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: function `cleanup_old_sessions` is never used
   --> src/api/ws/files.rs:341:14
    |
341 | pub async fn cleanup_old_sessions() {
    |              ^^^^^^^^^^^^^^^^^^^^

warning: associated functions `unauthorized`, `forbidden`, `conflict`, `unprocessable_entity`, and `custom` are never used
  --> src/api/error.rs:51:12
   |
22 | impl ApiError {
   | ------------- associated functions in this implementation
...
51 |     pub fn unauthorized(message: impl Into<String>) -> Self {
   |            ^^^^^^^^^^^^
...
60 |     pub fn forbidden(message: impl Into<String>) -> Self {
   |            ^^^^^^^^^
...
69 |     pub fn conflict(message: impl Into<String>) -> Self {
   |            ^^^^^^^^
...
78 |     pub fn unprocessable_entity(message: impl Into<String>) -> Self {
   |            ^^^^^^^^^^^^^^^^^^^^
...
87 |     pub fn custom(status_code: StatusCode, message: impl Into<String>) -> Self {
   |            ^^^^^^

warning: method `into_internal_error` is never used
   --> src/api/error.rs:163:8
    |
161 | pub trait IntoApiError<T> {
    |           ------------ method in this trait
162 |     fn into_api_error(self, message: &str) -> Result<T, ApiError>;
163 |     fn into_internal_error(self, message: &str) -> Result<T, ApiError>;
    |        ^^^^^^^^^^^^^^^^^^^

warning: methods `ok_or_not_found` and `ok_or_bad_request` are never used
   --> src/api/error.rs:184:8
    |
183 | pub trait IntoApiErrorOption<T> {
    |           ------------------ methods in this trait
184 |     fn ok_or_not_found(self, message: &str) -> Result<T, ApiError>;
    |        ^^^^^^^^^^^^^^^
185 |     fn ok_or_bad_request(self, message: &str) -> Result<T, ApiError>;
    |        ^^^^^^^^^^^^^^^^^

warning: function `db_error` is never used
   --> src/api/error.rs:199:8
    |
199 | pub fn db_error(operation: &str, error: impl std::fmt::Debug) -> ApiError {
    |        ^^^^^^^^

warning: function `fs_error` is never used
   --> src/api/error.rs:206:8
    |
206 | pub fn fs_error(operation: &str, error: impl std::fmt::Debug) -> ApiError {
    |        ^^^^^^^^

warning: function `git_error` is never used
   --> src/api/error.rs:213:8
    |
213 | pub fn git_error(operation: &str, error: impl std::fmt::Debug) -> ApiError {
    |        ^^^^^^^^^

warning: function `serde_error` is never used
   --> src/api/error.rs:220:8
    |
220 | pub fn serde_error(operation: &str, error: impl std::fmt::Debug) -> ApiError {
    |        ^^^^^^^^^^^

warning: function `validation_error` is never used
   --> src/api/error.rs:227:8
    |
227 | pub fn validation_error(field: &str, reason: &str) -> ApiError {
    |        ^^^^^^^^^^^^^^^^

warning: function `missing_param_error` is never used
   --> src/api/error.rs:233:8
    |
233 | pub fn missing_param_error(param_name: &str) -> ApiError {
    |        ^^^^^^^^^^^^^^^^^^^

warning: function `invalid_param_error` is never used
   --> src/api/error.rs:238:8
    |
238 | pub fn invalid_param_error(param_name: &str, reason: &str) -> ApiError {
    |        ^^^^^^^^^^^^^^^^^^^

warning: methods `bind_address`, `snapshot_summaries_enabled`, `should_use_rolling_summaries_in_context`, `get_chunk_size_for_head`, `get_chunk_overlap_for_head`, and `get_rolling_summary_config` are never used
   --> src/config/mod.rs:338:12
    |
166 | impl MiraConfig {
    | --------------- methods in this implementation
...
338 |     pub fn bind_address(&self) -> String {
    |            ^^^^^^^^^^^^
...
363 |     pub fn snapshot_summaries_enabled(&self) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
368 |     pub fn should_use_rolling_summaries_in_context(&self) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
382 |     pub fn get_chunk_size_for_head(&self, head: &str) -> usize {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
392 |     pub fn get_chunk_overlap_for_head(&self, head: &str) -> usize {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
402 |     pub fn get_rolling_summary_config(&self) -> RollingSummaryConfig {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `list_project_attachments`, `get_attachment_by_id`, `update_last_imported`, and `delete_attachment` are never used
   --> src/git/store.rs:132:18
    |
16  | impl GitStore {
    | ------------- methods in this implementation
...
132 |     pub async fn list_project_attachments(&self, project_id: &str) -> Result<Vec<GitRepoAttachment>> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
137 |     pub async fn get_attachment_by_id(&self, attachment_id: &str) -> Result<Option<GitRepoAttachment>> {
    |                  ^^^^^^^^^^^^^^^^^^^^
...
177 |     pub async fn update_last_imported(&self, attachment_id: &str, dt: DateTime<Utc>) -> Result<()> {
    |                  ^^^^^^^^^^^^^^^^^^^^
...
195 |     pub async fn delete_attachment(&self, attachment_id: &str) -> Result<bool> {
    |                  ^^^^^^^^^^^^^^^^^

warning: methods `get_commit_history`, `get_commit_diff`, `get_file_at_commit`, `get_local_path`, and `repository_exists` are never used
   --> src/git/client/mod.rs:136:12
    |
33  | impl GitClient {
    | -------------- methods in this implementation
...
136 |     pub fn get_commit_history(&self, attachment: &GitRepoAttachment, limit: Option<usize>) -> Result<Vec<CommitInfo>> {
    |            ^^^^^^^^^^^^^^^^^^
...
153 |     pub fn get_commit_diff(&self, attachment: &GitRepoAttachment, commit_id: &str) -> Result<DiffInfo> {
    |            ^^^^^^^^^^^^^^^
...
160 |     pub fn get_file_at_commit(
    |            ^^^^^^^^^^^^^^^^^^
...
174 |     pub fn get_local_path(&self, attachment: &GitRepoAttachment) -> String {
    |            ^^^^^^^^^^^^^^
...
179 |     pub fn repository_exists(&self, attachment: &GitRepoAttachment) -> bool {
    |            ^^^^^^^^^^^^^^^^^

warning: methods `get_file_at_commit` and `get_diff_between_commits` are never used
   --> src/git/client/diff_parser.rs:173:12
    |
72  | impl DiffParser {
    | --------------- methods in this implementation
...
173 |     pub fn get_file_at_commit(
    |            ^^^^^^^^^^^^^^^^^^
...
205 |     pub fn get_diff_between_commits(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `get_commits_from` and `get_commit` are never used
   --> src/git/client/branch_manager.rs:151:12
    |
43  | impl BranchManager {
    | ------------------ methods in this implementation
...
151 |     pub fn get_commits_from(&self, attachment: &GitRepoAttachment, commit_id: &str, limit: usize) -> Result<Vec<CommitInfo>> {
    |            ^^^^^^^^^^^^^^^^
...
185 |     pub fn get_commit(&self, attachment: &GitRepoAttachment, commit_id: &str) -> Result<CommitInfo> {
    |            ^^^^^^^^^^

warning: methods `chat_with_custom_prompt`, `simple_chat`, and `chat_with_gpt5_responses` are never used
   --> src/llm/chat.rs:9:18
    |
6   | impl OpenAIClient {
    | ----------------- methods in this implementation
...
9   |     pub async fn chat_with_custom_prompt(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
67  |     pub async fn simple_chat(
    |                  ^^^^^^^^^^^
...
121 |     pub async fn chat_with_gpt5_responses(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `request`, `request_multipart`, `get_embeddings`, and `config` are never used
   --> src/llm/client/mod.rs:235:12
    |
31  | impl OpenAIClient {
    | ----------------- methods in this implementation
...
235 |     pub fn request(&self, method: reqwest::Method, endpoint: &str) -> reqwest::RequestBuilder {
    |            ^^^^^^^
...
243 |     pub fn request_multipart(&self, endpoint: &str) -> reqwest::RequestBuilder {
    |            ^^^^^^^^^^^^^^^^^
...
250 |     pub async fn get_embeddings(&self, texts: &[String]) -> Result<Vec<Vec<f32>>> {
    |                  ^^^^^^^^^^^^^^
...
260 |     pub fn config(&self) -> &ClientConfig {
    |            ^^^^^^

warning: associated items `new` and `default_headers` are never used
   --> src/llm/client/config.rs:47:12
    |
20  | impl ClientConfig {
    | ----------------- associated items in this implementation
...
47  |     pub fn new(
    |            ^^^
...
126 |     pub fn default_headers(&self) -> Vec<(String, String)> {
    |            ^^^^^^^^^^^^^^^

warning: fields `model`, `verbosity`, `reasoning_effort`, and `max_output_tokens` are never read
   --> src/llm/client/config.rs:150:9
    |
149 | pub struct ModelConfig {
    |            ----------- fields in this struct
150 |     pub model: String,
    |         ^^^^^
151 |     pub verbosity: String,
    |         ^^^^^^^^^
152 |     pub reasoning_effort: String,
    |         ^^^^^^^^^^^^^^^^
153 |     pub max_output_tokens: usize,
    |         ^^^^^^^^^^^^^^^^^
    |
    = note: `ModelConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: methods `supports_streaming`, `recommended_timeout_secs`, and `to_json` are never used
   --> src/llm/client/config.rs:168:12
    |
156 | impl ModelConfig {
    | ---------------- methods in this implementation
...
168 |     pub fn supports_streaming(&self) -> bool {
    |            ^^^^^^^^^^^^^^^^^^
...
174 |     pub fn recommended_timeout_secs(&self) -> u64 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
184 |     pub fn to_json(&self) -> serde_json::Value {
    |            ^^^^^^^

warning: field `raw` is never read
  --> src/llm/client/responses.rs:14:9
   |
12 | pub struct ResponseOutput {
   |            -------------- field in this struct
13 |     pub content: String,
14 |     pub raw: Option<Value>,
   |         ^^^
   |
   = note: `ResponseOutput` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: associated function `new` is never used
  --> src/llm/client/responses.rs:18:12
   |
17 | impl ResponseOutput {
   | ------------------- associated function in this implementation
18 |     pub fn new(content: String) -> Self {
   |            ^^^

warning: function `extract_tool_calls` is never used
   --> src/llm/client/responses.rs:118:8
    |
118 | pub fn extract_tool_calls(response: &Value) -> Vec<ToolCall> {
    |        ^^^^^^^^^^^^^^^^^^

warning: function `extract_usage_info` is never used
   --> src/llm/client/responses.rs:145:8
    |
145 | pub fn extract_usage_info(response: &Value) -> Option<UsageInfo> {
    |        ^^^^^^^^^^^^^^^^^^

warning: function `extract_content_from_chunk` is never used
   --> src/llm/client/streaming.rs:118:8
    |
118 | pub fn extract_content_from_chunk(chunk: &Value) -> Option<String> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `is_completion_chunk` is never used
   --> src/llm/client/streaming.rs:165:8
    |
165 | pub fn is_completion_chunk(chunk: &Value) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^

warning: fields `content_buffer`, `tool_calls_buffer`, and `usage_info` are never read
   --> src/llm/client/streaming.rs:206:5
    |
205 | pub struct StreamProcessor {
    |            --------------- fields in this struct
206 |     content_buffer: String,
    |     ^^^^^^^^^^^^^^
207 |     tool_calls_buffer: Vec<ToolCallDelta>,
    |     ^^^^^^^^^^^^^^^^^
208 |     usage_info: Option<StreamingUsage>,
    |     ^^^^^^^^^^

warning: methods `process_chunk`, `get_content`, `get_tool_calls`, and `get_usage` are never used
   --> src/llm/client/streaming.rs:221:12
    |
211 | impl StreamProcessor {
    | -------------------- methods in this implementation
...
221 |     pub fn process_chunk(&mut self, chunk: &Value) -> ProcessResult {
    |            ^^^^^^^^^^^^^
...
250 |     pub fn get_content(&self) -> &str {
    |            ^^^^^^^^^^^
...
255 |     pub fn get_tool_calls(&self) -> &[ToolCallDelta] {
    |            ^^^^^^^^^^^^^^
...
260 |     pub fn get_usage(&self) -> Option<&StreamingUsage> {
    |            ^^^^^^^^^

warning: fields `content_delta`, `tool_calls`, `usage`, and `is_complete` are never read
   --> src/llm/client/streaming.rs:268:9
    |
267 | pub struct ProcessResult {
    |            ------------- fields in this struct
268 |     pub content_delta: Option<String>,
    |         ^^^^^^^^^^^^^
269 |     pub tool_calls: Option<Vec<ToolCallDelta>>,
    |         ^^^^^^^^^^
270 |     pub usage: Option<StreamingUsage>,
    |         ^^^^^
271 |     pub is_complete: bool,
    |         ^^^^^^^^^^^
    |
    = note: `ProcessResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: function `extract_tool_calls_from_chunk` is never used
   --> src/llm/client/streaming.rs:281:8
    |
281 | pub fn extract_tool_calls_from_chunk(chunk: &Value) -> Vec<ToolCallDelta> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `extract_usage_from_chunk` is never used
   --> src/llm/client/streaming.rs:314:8
    |
314 | pub fn extract_usage_from_chunk(chunk: &Value) -> Option<StreamingUsage> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `get_embeddings_batch_chunked` and `cosine_similarity` are never used
   --> src/llm/client/embedding.rs:166:18
    |
19  | impl EmbeddingClient {
    | -------------------- associated items in this implementation
...
166 |     pub async fn get_embeddings_batch_chunked(&self, texts: &[String]) -> Result<Vec<Vec<f32>>> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
182 |     pub fn cosine_similarity(a: &[f32], b: &[f32]) -> Result<f32> {
    |            ^^^^^^^^^^^^^^^^^

warning: struct `EmbeddingUtils` is never constructed
   --> src/llm/client/embedding.rs:200:12
    |
200 | pub struct EmbeddingUtils;
    |            ^^^^^^^^^^^^^^

warning: associated functions `chunk_text`, `estimate_tokens`, and `estimate_cost` are never used
   --> src/llm/client/embedding.rs:204:12
    |
202 | impl EmbeddingUtils {
    | ------------------- associated functions in this implementation
203 |     /// Splits long text into chunks suitable for embedding.
204 |     pub fn chunk_text(text: &str, max_chunk_size: usize, overlap: usize) -> Vec<String> {
    |            ^^^^^^^^^^
...
225 |     pub fn estimate_tokens(texts: &[String]) -> usize {
    |            ^^^^^^^^^^^^^^^
...
231 |     pub fn estimate_cost(texts: &[String]) -> f64 {
    |            ^^^^^^^^^^^^^

warning: fields `model` and `dimensions` are never read
  --> src/llm/embeddings.rs:15:9
   |
14 | pub struct EmbeddingConfig {
   |            --------------- fields in this struct
15 |     pub model: String,
   |         ^^^^^
16 |     pub dimensions: usize,
   |         ^^^^^^^^^^

warning: fields `data`, `model`, and `usage` are never read
  --> src/llm/embeddings.rs:31:9
   |
30 | pub struct EmbeddingResponse {
   |            ----------------- fields in this struct
31 |     pub data: Vec<EmbeddingData>,
   |         ^^^^
32 |     pub model: String,
   |         ^^^^^
33 |     pub usage: EmbeddingUsage,
   |         ^^^^^
   |
   = note: `EmbeddingResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `embedding` and `index` are never read
  --> src/llm/embeddings.rs:38:9
   |
37 | pub struct EmbeddingData {
   |            ------------- fields in this struct
38 |     pub embedding: Vec<f32>,
   |         ^^^^^^^^^
39 |     pub index: usize,
   |         ^^^^^
   |
   = note: `EmbeddingData` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `prompt_tokens` and `total_tokens` are never read
  --> src/llm/embeddings.rs:44:9
   |
43 | pub struct EmbeddingUsage {
   |            -------------- fields in this struct
44 |     pub prompt_tokens: usize,
   |         ^^^^^^^^^^^^^
45 |     pub total_tokens: usize,
   |         ^^^^^^^^^^^^
   |
   = note: `EmbeddingUsage` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: function `cosine_similarity` is never used
  --> src/llm/embeddings.rs:51:12
   |
51 |     pub fn cosine_similarity(a: &[f32], b: &[f32]) -> f32 {
   |            ^^^^^^^^^^^^^^^^^

warning: function `normalize_embedding` is never used
  --> src/llm/embeddings.rs:68:12
   |
68 |     pub fn normalize_embedding(embedding: &mut [f32]) {
   |            ^^^^^^^^^^^^^^^^^^^

warning: function `euclidean_distance` is never used
  --> src/llm/embeddings.rs:78:12
   |
78 |     pub fn euclidean_distance(a: &[f32], b: &[f32]) -> f32 {
   |            ^^^^^^^^^^^^^^^^^^

warning: function `classify` is never used
 --> src/llm/emotional_weight.rs:7:14
  |
7 | pub async fn classify(client: &OpenAIClient, message: &str) -> Result<f32, Error> {
  |              ^^^^^^^^

warning: associated function `from_function_result` is never used
  --> src/llm/intent.rs:26:12
   |
24 | impl ChatIntent {
   | --------------- associated function in this implementation
25 |     /// Parse and normalize the ChatIntent from the OpenAI function_call result.
26 |     pub fn from_function_result(raw: &serde_json::Value) -> Self {
   |            ^^^^^^^^^^^^^^^^^^^^

warning: function `chat_intent_function_schema` is never used
  --> src/llm/intent.rs:82:8
   |
82 | pub fn chat_intent_function_schema() -> serde_json::Value {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `evaluate_memory` and `evaluate_memory_attempt` are never used
  --> src/llm/memory_eval.rs:15:18
   |
12 | impl OpenAIClient {
   | ----------------- methods in this implementation
...
15 |     pub async fn evaluate_memory(&self, req: EvaluateMemoryRequest) -> Result<EvaluateMemoryResponse> {
   |                  ^^^^^^^^^^^^^^^
...
40 |     async fn evaluate_memory_attempt(&self, req: &EvaluateMemoryRequest) -> Result<EvaluateMemoryResponse> {
   |              ^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `ModerationResult` is never constructed
  --> src/llm/moderation.rs:11:12
   |
11 | pub struct ModerationResult {
   |            ^^^^^^^^^^^^^^^^
   |
   = note: `ModerationResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: method `moderate` is never used
  --> src/llm/moderation.rs:19:18
   |
16 | impl OpenAIClient {
   | ----------------- method in this implementation
...
19 |     pub async fn moderate(&self, text: &str) -> Result<Option<ModerationResult>> {
   |                  ^^^^^^^^

warning: associated items `with_thread_manager`, `create_response`, `create_response_with_context`, `build_gpt5_parameters`, `build_standard_tools`, and `build_function_tool` are never used
   --> src/llm/responses/manager.rs:37:12
    |
27  | impl ResponsesManager {
    | --------------------- associated items in this implementation
...
37  |     pub fn with_thread_manager(
    |            ^^^^^^^^^^^^^^^^^^^
...
48  |     pub async fn create_response(
    |                  ^^^^^^^^^^^^^^^
...
70  |     pub async fn create_response_with_context(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
248 |     pub fn build_gpt5_parameters(
    |            ^^^^^^^^^^^^^^^^^^^^^
...
272 |     pub fn build_standard_tools(
    |            ^^^^^^^^^^^^^^^^^^^^
...
304 |     pub fn build_function_tool(
    |            ^^^^^^^^^^^^^^^^^^^

warning: fields `client` and `stores` are never read
  --> src/llm/responses/vector_store.rs:21:5
   |
20 | pub struct VectorStoreManager {
   |            ------------------ fields in this struct
21 |     client: Arc<OpenAIClient>,
   |     ^^^^^^
22 |     stores: Arc<RwLock<HashMap<String, VectorStoreInfo>>>,
   |     ^^^^^^
   |
   = note: `VectorStoreManager` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: fields `id`, `name`, `created_at`, `file_ids`, and `usage_bytes` are never read
  --> src/llm/responses/vector_store.rs:28:9
   |
27 | pub struct VectorStoreInfo {
   |            --------------- fields in this struct
28 |     pub id: String,
   |         ^^
29 |     pub name: String,
   |         ^^^^
30 |     pub created_at: i64,
   |         ^^^^^^^^^^
31 |     pub file_ids: Vec<String>,
   |         ^^^^^^^^
32 |     pub usage_bytes: i64,
   |         ^^^^^^^^^^^
   |
   = note: `VectorStoreInfo` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple associated items are never used
   --> src/llm/responses/vector_store.rs:36:15
    |
35  | impl VectorStoreManager {
    | ----------------------- associated items in this implementation
36  |     pub const PERSONAL_STORE_KEY: &'static str = "_personal";
    |               ^^^^^^^^^^^^^^^^^^
...
46  |     pub async fn create_project_store(&self, project_id: &str) -> Result<String> {
    |                  ^^^^^^^^^^^^^^^^^^^^
...
85  |     pub async fn get_or_create_personal_store(&self) -> Result<String> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
94  |     pub async fn add_document(&self, project_id_or_personal: &str, file_path: PathBuf) -> Result<String> {
    |                  ^^^^^^^^^^^^
...
151 |     pub async fn search_documents(
    |                  ^^^^^^^^^^^^^^^^
...
213 |     async fn get_store_info(&self, key: &str) -> Option<VectorStoreInfo> {
    |              ^^^^^^^^^^^^^^
...
218 |     pub async fn list_stores(&self) -> Result<Vec<VectorStoreInfo>> {
    |                  ^^^^^^^^^^^
...
224 |     pub async fn delete_store(&self, project_id: &str) -> Result<()> {
    |                  ^^^^^^^^^^^^

warning: struct `CreateVectorStoreRequest` is never constructed
   --> src/llm/responses/vector_store.rs:243:8
    |
243 | struct CreateVectorStoreRequest {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `id`, `name`, and `created_at` are never read
   --> src/llm/responses/vector_store.rs:251:5
    |
250 | struct VectorStoreResponse {
    |        ------------------- fields in this struct
251 |     id: String,
    |     ^^
252 |     name: String,
    |     ^^^^
253 |     created_at: i64,
    |     ^^^^^^^^^^
    |
    = note: `VectorStoreResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: struct `AttachFileRequest` is never constructed
   --> src/llm/responses/vector_store.rs:265:8
    |
265 | struct AttachFileRequest {
    |        ^^^^^^^^^^^^^^^^^

warning: struct `SearchRequest` is never constructed
   --> src/llm/responses/vector_store.rs:270:8
    |
270 | struct SearchRequest {
    |        ^^^^^^^^^^^^^

warning: field `results` is never read
   --> src/llm/responses/vector_store.rs:277:5
    |
276 | struct SearchResponse {
    |        -------------- field in this struct
277 |     results: Vec<SearchResultItem>,
    |     ^^^^^^^
    |
    = note: `SearchResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `content`, `score`, `file_id`, and `metadata` are never read
   --> src/llm/responses/vector_store.rs:282:5
    |
281 | struct SearchResultItem {
    |        ---------------- fields in this struct
282 |     content: String,
    |     ^^^^^^^
283 |     score: f32,
    |     ^^^^^
284 |     file_id: Option<String>,
    |     ^^^^^^^
285 |     metadata: Option<Value>,
    |     ^^^^^^^^
    |
    = note: `SearchResultItem` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: method `format_for_context` is never used
   --> src/llm/responses/vector_store.rs:299:12
    |
297 | impl SearchResult {
    | ----------------- method in this implementation
298 |     /// Formats the search result for inclusion in a chat context prompt.
299 |     pub fn format_for_context(&self) -> String {
    |            ^^^^^^^^^^^^^^^^^^

warning: fields `messages`, `response_id_history`, `total_tokens`, and `last_activity` are never read
  --> src/llm/responses/thread.rs:32:9
   |
31 | pub struct SessionInfo { // --- FIXED: Made this struct public ---
   |            ----------- fields in this struct
32 |     pub messages: VecDeque<ResponseMessage>,
   |         ^^^^^^^^
33 |     pub previous_response_id: Option<String>,
34 |     pub response_id_history: VecDeque<String>,
   |         ^^^^^^^^^^^^^^^^^^^
35 |     pub total_tokens: usize,
   |         ^^^^^^^^^^^^
36 |     // pub created_at: chrono::DateTime<chrono::Utc>, // Removed to clear dead_code warning
37 |     pub last_activity: chrono::DateTime<chrono::Utc>,
   |         ^^^^^^^^^^^^^
   |
   = note: `SessionInfo` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `max_messages_per_session`, `max_response_id_history`, and `token_limit` are never read
  --> src/llm/responses/thread.rs:43:5
   |
41 | pub struct ThreadManager {
   |            ------------- fields in this struct
42 |     pub sessions: Arc<RwLock<HashMap<String, SessionInfo>>>,
43 |     max_messages_per_session: usize,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
44 |     max_response_id_history: usize,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
45 |     token_limit: usize,
   |     ^^^^^^^^^^^

warning: multiple methods are never used
   --> src/llm/responses/thread.rs:62:18
    |
48  | impl ThreadManager {
    | ------------------ methods in this implementation
...
62  |     pub async fn add_message(
    |                  ^^^^^^^^^^^
...
102 |     pub async fn update_response_id(
    |                  ^^^^^^^^^^^^^^^^^^
...
149 |     pub async fn get_conversation_capped(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
167 |     pub async fn get_full_conversation(&self, session_id: &str) -> Vec<ResponseMessage> {
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
178 |     pub async fn get_conversation_with_token_limit(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
208 |     pub async fn clear_session(&self, session_id: &str) -> Result<()> {
    |                  ^^^^^^^^^^^^^
...
224 |     pub async fn delete_session(&self, session_id: &str) -> Result<()> {
    |                  ^^^^^^^^^^^^^^
...
232 |     pub async fn list_sessions(&self) -> Vec<String> {
    |                  ^^^^^^^^^^^^^
...
238 |     pub async fn cleanup_old_sessions(&self, max_age_hours: i64) -> usize {
    |                  ^^^^^^^^^^^^^^^^^^^^
...
263 |     fn trim_session_messages(&self, session: &mut SessionInfo) {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
282 |     fn estimate_message_tokens(&self, message: &ResponseMessage) -> usize {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: field `client` is never read
  --> src/llm/responses/image.rs:16:5
   |
15 | pub struct ImageGenerationManager {
   |            ---------------------- field in this struct
16 |     client: Arc<OpenAIClient>,
   |     ^^^^^^
   |
   = note: `ImageGenerationManager` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: methods `generate_images` and `parse_images_from_response` are never used
   --> src/llm/responses/image.rs:25:18
    |
19  | impl ImageGenerationManager {
    | --------------------------- methods in this implementation
...
25  |     pub async fn generate_images(
    |                  ^^^^^^^^^^^^^^^
...
105 |     fn parse_images_from_response(&self, response: &Value) -> Result<Vec<ImageData>> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method `validate` is never used
   --> src/llm/responses/image.rs:171:12
    |
169 | impl ImageOptions {
    | ----------------- method in this implementation
170 |     /// Validate the options
171 |     pub fn validate(&self) -> Result<()> {
    |            ^^^^^^^^

warning: method `urls` is never used
   --> src/llm/responses/image.rs:210:12
    |
208 | impl ImageGenerationResponse {
    | ---------------------------- method in this implementation
209 |     /// Get URLs from the response
210 |     pub fn urls(&self) -> Vec<&str> {
    |            ^^^^

warning: field `function_schema` is never read
  --> src/llm/schema.rs:13:9
   |
10 | pub struct EvaluateMemoryRequest {
   |            --------------------- field in this struct
...
13 |     pub function_schema: Value,    // The function schema (computed, not serialized)
   |         ^^^^^^^^^^^^^^^
   |
   = note: `EvaluateMemoryRequest` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: associated function `new` is never used
  --> src/llm/schema.rs:18:12
   |
16 | impl EvaluateMemoryRequest {
   | -------------------------- associated function in this implementation
17 |     /// Create a new evaluation request with the standard schema
18 |     pub fn new(content: String) -> Self {
   |            ^^^

warning: function `function_schema` is never used
  --> src/llm/schema.rs:63:8
   |
63 | pub fn function_schema() -> Value {
   |        ^^^^^^^^^^^^^^^

warning: function `create_evaluation_request` is never used
   --> src/llm/schema.rs:180:8
    |
180 | pub fn create_evaluation_request(content: String) -> EvaluateMemoryRequest {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `full_text` and `raw` are never read
  --> src/llm/streaming.rs:19:12
   |
19 |     Done { full_text: String, raw: Option<Value> },
   |     ----   ^^^^^^^^^          ^^^
   |     |
   |     fields in this variant
   |
   = note: `StreamEvent` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: methods `touch`, `set_subject_tag`, `pin`, and `unpin` are never used
   --> src/memory/types.rs:95:12
    |
55  | impl MemoryEntry {
    | ---------------- methods in this implementation
...
95  |     pub fn touch(&mut self, boost: Option<f32>) {
    |            ^^^^^
...
106 |     pub fn set_subject_tag<S: Into<String>>(&mut self, tag: S) {
    |            ^^^^^^^^^^^^^^^
...
110 |     pub fn pin(&mut self) {
    |            ^^^
...
114 |     pub fn unpin(&mut self) {
    |            ^^^^^

warning: methods `update_metadata` and `delete` are never used
  --> src/memory/traits.rs:28:14
   |
9  | pub trait MemoryStore: Send + Sync {
   |           ----------- methods in this trait
...
28 |     async fn update_metadata(&self, id: i64, updated: &MemoryEntry) -> anyhow::Result<MemoryEntry>;
   |              ^^^^^^^^^^^^^^^
...
31 |     async fn delete(&self, id: i64) -> anyhow::Result<()>;
   |              ^^^^^^

warning: methods `apply_decay` and `high_salience_memories` are never used
  --> src/memory/recall.rs:23:12
   |
17 | impl RecallContext {
   | ------------------ methods in this implementation
...
23 |     pub fn apply_decay(&mut self, config: &DecayConfig) {
   |            ^^^^^^^^^^^
...
41 |     pub fn high_salience_memories(&self) -> Vec<&MemoryEntry> {
   |            ^^^^^^^^^^^^^^^^^^^^^^

warning: function `build_context` is never used
  --> src/memory/recall.rs:50:14
   |
50 | pub async fn build_context<M1, M2>(
   |              ^^^^^^^^^^^^^

warning: function `normalize_salience` is never used
 --> src/memory/salience.rs:7:8
  |
7 | pub fn normalize_salience(raw: f32) -> f32 {
  |        ^^^^^^^^^^^^^^^^^^

warning: function `rescore_salience` is never used
  --> src/memory/salience.rs:12:8
   |
12 | pub fn rescore_salience(entry: &MemoryEntry, decay: Option<f32>) -> f32 {
   |        ^^^^^^^^^^^^^^^^

warning: function `summarize_memories` is never used
 --> src/memory/summarizer.rs:6:14
  |
6 | pub async fn summarize_memories(entries: &[MemoryEntry]) -> Option<String> {
  |              ^^^^^^^^^^^^^^^^^^

warning: fields `forgetting_threshold`, `recall_reinforcement`, `base_decay_rate`, and `emotional_resistance` are never read
  --> src/memory/decay.rs:12:9
   |
10 | pub struct DecayConfig {
   |            ----------- fields in this struct
11 |     /// Minimum salience floor (memories never decay below this)
12 |     pub forgetting_threshold: f32,
   |         ^^^^^^^^^^^^^^^^^^^^
13 |     /// Boost factor when a memory is recalled
14 |     pub recall_reinforcement: f32,
   |         ^^^^^^^^^^^^^^^^^^^^
15 |     /// Not used in stepped decay, kept for compatibility
16 |     pub base_decay_rate: f32,
   |         ^^^^^^^^^^^^^^^
17 |     /// Not used in stepped decay, kept for compatibility
18 |     pub emotional_resistance: f32,
   |         ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `DecayConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: function `calculate_decayed_salience` is never used
  --> src/memory/decay.rs:33:8
   |
33 | pub fn calculate_decayed_salience(
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `reinforce_memory` is never used
  --> src/memory/decay.rs:83:8
   |
83 | pub fn reinforce_memory(
   |        ^^^^^^^^^^^^^^^^

warning: function `identify_forgotten_memories` is never used
   --> src/memory/decay.rs:109:8
    |
109 | pub fn identify_forgotten_memories(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `apply_batch_decay` is never used
   --> src/memory/decay.rs:130:8
    |
130 | pub fn apply_batch_decay(
    |        ^^^^^^^^^^^^^^^^^

warning: function `should_include_memory` is never used
   --> src/memory/decay.rs:142:8
    |
142 | pub fn should_include_memory(
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: methods `run_migrations`, `update_pin_status`, and `get_by_id` are never used
  --> src/memory/sqlite/store.rs:24:18
   |
18 | impl SqliteMemoryStore {
   | ---------------------- methods in this implementation
...
24 |     pub async fn run_migrations(&self) -> Result<()> {
   |                  ^^^^^^^^^^^^^^
...
55 |     pub async fn update_pin_status(&self, memory_id: i64, pinned: bool) -> Result<()> {
   |                  ^^^^^^^^^^^^^^^^^
...
72 |     pub async fn get_by_id(&self, memory_id: i64) -> Result<Option<MemoryEntry>> {
   |                  ^^^^^^^^^

warning: constant `INSERT_MEMORY` is never used
 --> src/memory/sqlite/query.rs:6:11
  |
6 | pub const INSERT_MEMORY: &str = r#"
  |           ^^^^^^^^^^^^^

warning: constant `LOAD_RECENT` is never used
  --> src/memory/sqlite/query.rs:15:11
   |
15 | pub const LOAD_RECENT: &str = r#"
   |           ^^^^^^^^^^^

warning: constant `UPDATE_METADATA` is never used
  --> src/memory/sqlite/query.rs:25:11
   |
25 | pub const UPDATE_METADATA: &str = r#"
   |           ^^^^^^^^^^^^^^^

warning: constant `DELETE_MEMORY` is never used
  --> src/memory/sqlite/query.rs:33:11
   |
33 | pub const DELETE_MEMORY: &str = r#"
   |           ^^^^^^^^^^^^^

warning: constant `LOAD_FLAGGED` is never used
  --> src/memory/sqlite/query.rs:38:11
   |
38 | pub const LOAD_FLAGGED: &str = r#"
   |           ^^^^^^^^^^^^

warning: function `embedding_f32_to_bytes` is never used
  --> src/memory/sqlite/query.rs:47:8
   |
47 | pub fn embedding_f32_to_bytes(embedding: &[f32]) -> Vec<u8> {
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: function `embedding_bytes_to_f32` is never used
  --> src/memory/sqlite/query.rs:52:8
   |
52 | pub fn embedding_bytes_to_f32(blob: &[u8]) -> Vec<f32> {
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: constant `CREATE_CHAT_HISTORY` is never used
  --> src/memory/sqlite/migration.rs:10:7
   |
10 | const CREATE_CHAT_HISTORY: &str = r#"
   |       ^^^^^^^^^^^^^^^^^^^

warning: constant `CREATE_PROJECTS` is never used
  --> src/memory/sqlite/migration.rs:29:7
   |
29 | const CREATE_PROJECTS: &str = r#"
   |       ^^^^^^^^^^^^^^^

warning: constant `CREATE_ARTIFACTS` is never used
  --> src/memory/sqlite/migration.rs:42:7
   |
42 | const CREATE_ARTIFACTS: &str = r#"
   |       ^^^^^^^^^^^^^^^^

warning: constant `CREATE_GIT_REPO_ATTACHMENTS` is never used
  --> src/memory/sqlite/migration.rs:57:7
   |
57 | const CREATE_GIT_REPO_ATTACHMENTS: &str = r#"
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `CREATE_SESSION_MESSAGE_COUNTS` is never used
  --> src/memory/sqlite/migration.rs:71:7
   |
71 | const CREATE_SESSION_MESSAGE_COUNTS: &str = r#"
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `CREATE_SUMMARY_METADATA` is never used
  --> src/memory/sqlite/migration.rs:83:7
   |
83 | const CREATE_SUMMARY_METADATA: &str = r#"
   |       ^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `ALTER_CHAT_HISTORY_ADD_PROJECT` is never used
  --> src/memory/sqlite/migration.rs:96:7
   |
96 | const ALTER_CHAT_HISTORY_ADD_PROJECT: &str = r#"
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `ALTER_CHAT_HISTORY_ADD_PINNED` is never used
   --> src/memory/sqlite/migration.rs:101:7
    |
101 | const ALTER_CHAT_HISTORY_ADD_PINNED: &str = r#"
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `ALTER_CHAT_HISTORY_ADD_SUBJECT_TAG` is never used
   --> src/memory/sqlite/migration.rs:105:7
    |
105 | const ALTER_CHAT_HISTORY_ADD_SUBJECT_TAG: &str = r#"
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `ALTER_CHAT_HISTORY_ADD_LAST_ACCESSED` is never used
   --> src/memory/sqlite/migration.rs:109:7
    |
109 | const ALTER_CHAT_HISTORY_ADD_LAST_ACCESSED: &str = r#"
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `CREATE_INDICES` is never used
   --> src/memory/sqlite/migration.rs:114:7
    |
114 | const CREATE_INDICES: &str = r#"
    |       ^^^^^^^^^^^^^^

warning: constant `INITIALIZE_MESSAGE_COUNTS` is never used
   --> src/memory/sqlite/migration.rs:143:7
    |
143 | const INITIALIZE_MESSAGE_COUNTS: &str = r#"
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `CREATE_MESSAGE_COUNT_TRIGGER` is never used
   --> src/memory/sqlite/migration.rs:155:7
    |
155 | const CREATE_MESSAGE_COUNT_TRIGGER: &str = r#"
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `CREATE_SUMMARY_TRACKING_TRIGGER` is never used
   --> src/memory/sqlite/migration.rs:169:7
    |
169 | const CREATE_SUMMARY_TRACKING_TRIGGER: &str = r#"
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `column_exists` is never used
   --> src/memory/sqlite/migration.rs:205:10
    |
205 | async fn column_exists(pool: &SqlitePool, table: &str, col: &str) -> Result<bool> {
    |          ^^^^^^^^^^^^^

warning: function `table_exists` is never used
   --> src/memory/sqlite/migration.rs:217:10
    |
217 | async fn table_exists(pool: &SqlitePool, table: &str) -> Result<bool> {
    |          ^^^^^^^^^^^^

warning: function `trigger_exists` is never used
   --> src/memory/sqlite/migration.rs:228:10
    |
228 | async fn trigger_exists(pool: &SqlitePool, trigger: &str) -> Result<bool> {
    |          ^^^^^^^^^^^^^^

warning: function `run_migrations` is never used
   --> src/memory/sqlite/migration.rs:239:14
    |
239 | pub async fn run_migrations(pool: &SqlitePool) -> Result<()> {
    |              ^^^^^^^^^^^^^^

warning: function `build_session_filter` is never used
  --> src/memory/qdrant/search.rs:10:8
   |
10 | pub fn build_session_filter(session_id: &str) -> serde_json::Value {
   |        ^^^^^^^^^^^^^^^^^^^^

warning: function `build_advanced_filter` is never used
  --> src/memory/qdrant/search.rs:20:8
   |
20 | pub fn build_advanced_filter(
   |        ^^^^^^^^^^^^^^^^^^^^^

warning: function `millis_to_datetime` is never used
  --> src/memory/qdrant/search.rs:48:4
   |
48 | fn millis_to_datetime(ms: i64) -> DateTime<Utc> {
   |    ^^^^^^^^^^^^^^^^^^

warning: function `parse_memory_entry_from_qdrant` is never used
  --> src/memory/qdrant/search.rs:55:8
   |
55 | pub fn parse_memory_entry_from_qdrant(point: &serde_json::Value) -> Option<MemoryEntry> {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `from_single_store`, `get_semantic_store`, `get_store`, `is_multi_head_enabled`, and `get_collection_info` are never used
   --> src/memory/qdrant/multi_store.rs:54:12
    |
22  | impl QdrantMultiStore {
    | --------------------- associated items in this implementation
...
54  |     pub fn from_single_store(single_store: Arc<QdrantMemoryStore>) -> Self {
    |            ^^^^^^^^^^^^^^^^^
...
119 |     pub fn get_semantic_store(&self) -> Option<&Arc<QdrantMemoryStore>> {
    |            ^^^^^^^^^^^^^^^^^^
...
124 |     pub fn get_store(&self, head: EmbeddingHead) -> Option<&Arc<QdrantMemoryStore>> {
    |            ^^^^^^^^^
...
129 |     pub fn is_multi_head_enabled(&self) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
134 |     pub fn get_collection_info(&self) -> Vec<(EmbeddingHead, String)> {
    |            ^^^^^^^^^^^^^^^^^^^

warning: struct `ScoredMemoryEntry` is never constructed
  --> src/memory/parallel_recall.rs:19:12
   |
19 | pub struct ScoredMemoryEntry {
   |            ^^^^^^^^^^^^^^^^^
   |
   = note: `ScoredMemoryEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: function `build_context_parallel` is never used
  --> src/memory/parallel_recall.rs:29:14
   |
29 | pub async fn build_context_parallel<M1, M2>(
   |              ^^^^^^^^^^^^^^^^^^^^^^

warning: function `build_context_multi_head` is never used
   --> src/memory/parallel_recall.rs:125:14
    |
125 | pub async fn build_context_multi_head<M1>(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `load_recent_with_summaries` is never used
   --> src/memory/parallel_recall.rs:214:10
    |
214 | async fn load_recent_with_summaries<M>(
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `merge_and_deduplicate_results_vec` is never used
   --> src/memory/parallel_recall.rs:247:4
    |
247 | fn merge_and_deduplicate_results_vec(
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `compute_rerank_scores` is never used
   --> src/memory/parallel_recall.rs:309:10
    |
309 | async fn compute_rerank_scores(
    |          ^^^^^^^^^^^^^^^^^^^^^

warning: function `build_context_adaptive` is never used
   --> src/memory/parallel_recall.rs:337:14
    |
337 | pub async fn build_context_adaptive<M1, M2>(
    |              ^^^^^^^^^^^^^^^^^^^^^^

warning: struct `ParallelRecallMetrics` is never constructed
   --> src/memory/parallel_recall.rs:379:12
    |
379 | pub struct ParallelRecallMetrics {
    |            ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `ParallelRecallMetrics` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: function `build_context_with_metrics` is never used
   --> src/memory/parallel_recall.rs:393:14
    |
393 | pub async fn build_context_with_metrics<M1, M2>(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `client` and `memory` are never read
  --> src/services/chat/mod.rs:31:5
   |
29 | pub struct ChatService {
   |            ----------- fields in this struct
30 |     // Core dependencies
31 |     client: Arc<OpenAIClient>,
   |     ^^^^^^
32 |     memory: Arc<MemoryService>,
   |     ^^^^^^

warning: methods `build_recall_context`, `client`, and `memory` are never used
   --> src/services/chat/mod.rs:130:18
    |
44  | impl ChatService {
    | ---------------- methods in this implementation
...
130 |     pub async fn build_recall_context(
    |                  ^^^^^^^^^^^^^^^^^^^^
...
139 |     pub fn client(&self) -> &Arc<OpenAIClient> {
    |            ^^^^^^
...
143 |     pub fn memory(&self) -> &Arc<MemoryService> {
    |            ^^^^^^

warning: multiple methods are never used
   --> src/services/chat/config.rs:65:12
    |
59  | impl ChatConfig {
    | --------------- methods in this implementation
...
65  |     pub fn verbosity(&self) -> &str {
    |            ^^^^^^^^^
...
69  |     pub fn reasoning_effort(&self) -> &str {
    |            ^^^^^^^^^^^^^^^^
...
81  |     pub fn history_token_limit(&self) -> usize {
    |            ^^^^^^^^^^^^^^^^^^^
...
85  |     pub fn max_retrieval_tokens(&self) -> usize {
    |            ^^^^^^^^^^^^^^^^^^^^
...
97  |     pub fn enable_robust_memory(&self) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^^
...
101 |     pub fn embedding_heads(&self) -> &[String] {
    |            ^^^^^^^^^^^^^^^
...
105 |     pub fn enable_rolling_summaries(&self) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `ContextStats` is never constructed
  --> src/services/chat/context.rs:18:12
   |
18 | pub struct ContextStats {
   |            ^^^^^^^^^^^^
   |
   = note: `ContextStats` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: methods `get_context_stats`, `can_use_vector_search`, and `config` are never used
  --> src/services/chat/context.rs:70:18
   |
26 | impl ContextBuilder {
   | ------------------- methods in this implementation
...
70 |     pub async fn get_context_stats(&self, session_id: &str) -> Result<ContextStats> {
   |                  ^^^^^^^^^^^^^^^^^
...
89 |     pub fn can_use_vector_search(&self) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^
...
93 |     pub fn config(&self) -> &ChatConfig {
   |            ^^^^^^

warning: field `memory_service` is never read
  --> src/services/context.rs:14:5
   |
13 | pub struct ContextService {
   |            -------------- field in this struct
14 |     memory_service: Arc<MemoryService>,
   |     ^^^^^^^^^^^^^^
   |
   = note: `ContextService` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: method `build_context_with_text` is never used
  --> src/services/context.rs:26:18
   |
17 | impl ContextService {
   | ------------------- method in this implementation
...
26 |     pub async fn build_context_with_text(
   |                  ^^^^^^^^^^^^^^^^^^^^^^^

warning: enum `DocumentDestination` is never used
  --> src/services/document.rs:13:10
   |
13 | pub enum DocumentDestination {
   |          ^^^^^^^^^^^^^^^^^^^
   |
   = note: `DocumentDestination` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `memory_service` and `vector_store_manager` are never read
  --> src/services/document.rs:20:5
   |
19 | pub struct DocumentService {
   |            --------------- fields in this struct
20 |     memory_service: Arc<MemoryService>,
   |     ^^^^^^^^^^^^^^
21 |     vector_store_manager: Arc<VectorStoreManager>,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: methods `process_document`, `analyze_and_route`, `process_for_personal_memory`, and `process_for_project_vector_store` are never used
   --> src/services/document.rs:35:18
    |
24  | impl DocumentService {
    | -------------------- methods in this implementation
...
35  |     pub async fn process_document(
    |                  ^^^^^^^^^^^^^^^^
...
69  |     async fn analyze_and_route(
    |              ^^^^^^^^^^^^^^^^^
...
130 |     async fn process_for_personal_memory(&self, content: &str) -> Result<()> {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
154 |     async fn process_for_project_vector_store(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method `cleanup_inactive_sessions` is never used
   --> src/services/memory/mod.rs:419:18
    |
56  | impl MemoryService {
    | ------------------ method in this implementation
...
419 |     pub async fn cleanup_inactive_sessions(&self, max_age_hours: i64) -> Result<usize> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `similarity_score`, `salience_score`, `recency_score`, and `source_head` are never read
  --> src/services/memory/types.rs:13:9
   |
11 | pub struct ScoredMemoryEntry {
   |            ----------------- fields in this struct
12 |     pub entry: MemoryEntry,
13 |     pub similarity_score: f32,
   |         ^^^^^^^^^^^^^^^^
14 |     pub salience_score: f32,
   |         ^^^^^^^^^^^^^^
15 |     pub recency_score: f32,
   |         ^^^^^^^^^^^^^
16 |     pub composite_score: f32,
17 |     pub source_head: EmbeddingHead,
   |         ^^^^^^^^^^^
   |
   = note: `ScoredMemoryEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `summary_type` is never read
  --> src/services/memory/types.rs:54:9
   |
51 | pub struct SummaryRequest {
   |            -------------- field in this struct
...
54 |     pub summary_type: SummaryType,
   |         ^^^^^^^^^^^^
   |
   = note: `SummaryRequest` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: variant `Snapshot` is never constructed
  --> src/services/memory/types.rs:62:5
   |
59 | pub enum SummaryType {
   |          ----------- variant in this enum
...
62 |     Snapshot,    // On-demand snapshot summary
   |     ^^^^^^^^
   |
   = note: `SummaryType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `created_at` and `is_active` are never read
  --> src/services/memory/session.rs:19:9
   |
18 | pub struct SessionMetadata {
   |            --------------- fields in this struct
19 |     pub created_at: chrono::DateTime<chrono::Utc>,
   |         ^^^^^^^^^^
...
23 |     pub is_active: bool,
   |         ^^^^^^^^^
   |
   = note: `SessionMetadata` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple methods are never used
   --> src/services/memory/session.rs:59:18
    |
26  | impl SessionManager {
    | ------------------- methods in this implementation
...
59  |     pub async fn reset_counter(&self, session_id: &str) {
    |                  ^^^^^^^^^^^^^
...
66  |     pub async fn increment_by(&self, session_id: &str, amount: usize) -> usize {
    |                  ^^^^^^^^^^^^
...
109 |     pub async fn get_metadata(&self, session_id: &str) -> Option<SessionMetadata> {
    |                  ^^^^^^^^^^^^
...
115 |     pub async fn list_active_sessions(&self) -> Vec<(String, usize)> {
    |                  ^^^^^^^^^^^^^^^^^^^^
...
130 |     pub async fn deactivate_session(&self, session_id: &str) {
    |                  ^^^^^^^^^^^^^^^^^^
...
140 |     pub async fn cleanup_inactive_sessions(&self, max_age_hours: i64) -> usize {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^
...
169 |     pub async fn get_stats(&self) -> SessionStats {
    |                  ^^^^^^^^^

warning: struct `FileContextService` is never constructed
  --> src/services/file_context.rs:18:12
   |
18 | pub struct FileContextService {
   |            ^^^^^^^^^^^^^^^^^^
   |
   = note: `FileContextService` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: associated items `new`, `check_intent`, `get_context_if_needed`, `format_file_context`, and `get_stats` are never used
   --> src/services/file_context.rs:32:12
    |
31  | impl FileContextService {
    | ----------------------- associated items in this implementation
32  |     pub fn new(llm_client: Arc<OpenAIClient>, git_client: Arc<GitClient>) -> Self {
    |            ^^^
...
45  |     pub async fn check_intent(&self, message: &str, metadata: &MessageMetadata) -> Result<FileIntent> {
    |                  ^^^^^^^^^^^^
...
99  |     pub async fn get_context_if_needed(
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
159 |     pub fn format_file_context(&self, file_path: &str, content: &str, language: Option<&str>) -> String {
    |            ^^^^^^^^^^^^^^^^^^^
...
168 |     pub fn get_stats(&self) -> FileContextStats {
    |            ^^^^^^^^^

warning: method `chat_with_tools` is never used
  --> src/services/chat_with_tools.rs:46:14
   |
45 | pub trait ChatServiceToolExt {
   |           ------------------ method in this trait
46 |     async fn chat_with_tools(
   |              ^^^^^^^^^^^^^^^

warning: trait `ChatServiceWithTools` is never used
  --> src/services/chat_with_tools.rs:55:11
   |
55 | pub trait ChatServiceWithTools {
   |           ^^^^^^^^^^^^^^^^^^^^

warning: fields `vector_store_manager` and `git_client` are never read
  --> src/services/file_search.rs:17:5
   |
16 | pub struct FileSearchService {
   |            ----------------- fields in this struct
17 |     vector_store_manager: Arc<VectorStoreManager>,
   |     ^^^^^^^^^^^^^^^^^^^^
18 |     git_client: GitClient,
   |     ^^^^^^^^^^
   |
   = note: `FileSearchService` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: method `search_files` is never used
  --> src/services/file_search.rs:61:18
   |
51 | impl FileSearchService {
   | ---------------------- method in this implementation
...
61 |     pub async fn search_files(
   |                  ^^^^^^^^^^^^

warning: function `get_timestamp` is never used
 --> src/utils.rs:7:8
  |
7 | pub fn get_timestamp() -> u64 {
  |        ^^^^^^^^^^^^^

warning: function `get_timestamp_millis` is never used
  --> src/utils.rs:15:8
   |
15 | pub fn get_timestamp_millis() -> u128 {
   |        ^^^^^^^^^^^^^^^^^^^^

warning: method `prompt` is never used
  --> src/persona/mod.rs:20:12
   |
19 | impl PersonaOverlay {
   | ------------------- method in this implementation
20 |     pub fn prompt(&self) -> &'static str {
   |            ^^^^^^

warning: constant `FORBIDDEN_PERSONA_PROMPT` is never used
 --> src/persona/forbidden.rs:3:11
  |
3 | pub const FORBIDDEN_PERSONA_PROMPT: &str = r#"
  |           ^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `HALLOW_PERSONA_PROMPT` is never used
 --> src/persona/hallow.rs:3:11
  |
3 | pub const HALLOW_PERSONA_PROMPT: &str = r#"
  |           ^^^^^^^^^^^^^^^^^^^^^

warning: constant `HAVEN_PERSONA_PROMPT` is never used
 --> src/persona/haven.rs:3:11
  |
3 | pub const HAVEN_PERSONA_PROMPT: &str = r#"
  |           ^^^^^^^^^^^^^^^^^^^^

warning: `mira-backend` (bin "mira-backend") generated 200 warnings (18 duplicates) (run `cargo fix --bin "mira-backend"` to apply 3 suggestions)
   Compiling mira-backend v0.4.1 (/home/peter/mira/backend)
error[E0308]: arguments to this function are incorrect
  --> tests/memory_service_test.rs:36:26
   |
36 |     let memory_service = MemoryService::new(
   |                          ^^^^^^^^^^^^^^^^^^
37 |         llm_client,
   |         ---------- expected `Arc<SqliteMemoryStore>`, found `Arc<OpenAIClient>`
38 |         sqlite_store,
   |         ------------
   |         |
   |         argument #2 of type `Arc<QdrantMultiStore>` is missing
   |         expected `Arc<OpenAIClient>`, found `Arc<SqliteMemoryStore>`
39 |         qdrant_store,
   |         ------------ unexpected argument #3 of type `Arc<QdrantMemoryStore>`
   |
note: associated function defined here
  --> /home/peter/mira/backend/src/services/memory/mod.rs:58:12
   |
58 |     pub fn new(
   |            ^^^
help: did you mean
   |
36 -     let memory_service = MemoryService::new(
37 -         llm_client,
38 -         sqlite_store,
39 -         qdrant_store,
40 -     )
36 +     let memory_service = MemoryService::new(sqlite_store, /* Arc<QdrantMultiStore> */, llm_client)
   |

error[E0277]: `MemoryService` is not a future
  --> tests/memory_service_test.rs:41:6
   |
36 |       let memory_service = MemoryService::new(
   |  __________________________-
37 | |         llm_client,
38 | |         sqlite_store,
39 | |         qdrant_store,
40 | |     )
   | |_____- this call returns `MemoryService`
41 |       .await
   |       -^^^^^
   |       ||
   |       |`MemoryService` is not a future
   |       help: remove the `.await`
   |
   = help: the trait `std::future::Future` is not implemented for `MemoryService`
   = note: MemoryService must be a future or must implement `IntoFuture` to be awaited
   = note: required for `MemoryService` to implement `IntoFuture`

Some errors have detailed explanations: E0277, E0308.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `mira-backend` (test "memory_service_test") due to 2 previous errors
warning: build failed, waiting for other jobs to finish...
warning: unused import: `tempfile::TempDir`
   --> src/git/client/operations.rs:223:9
    |
223 |     use tempfile::TempDir;
    |         ^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: unused import: `FileNodeType`
  --> src/git/client/mod.rs:21:34
   |
21 | pub use tree_builder::{FileNode, FileNodeType, TreeBuilder};
   |                                  ^^^^^^^^^^^^

warning: unused import: `super::*`
   --> src/git/client/mod.rs:186:9
    |
186 |     use super::*;
    |         ^^^^^^^^

warning: unused import: `tempfile::TempDir`
   --> src/git/client/mod.rs:187:9
    |
187 |     use tempfile::TempDir;
    |         ^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `mock` found for struct `llm::client::OpenAIClient` in the current scope
   --> src/services/memory/classification.rs:230:72
    |
230 |         let classifier = MessageClassifier::new(Arc::new(OpenAIClient::mock()));
    |                                                                        ^^^^ function or associated item not found in `OpenAIClient`
    |
   ::: src/llm/client/mod.rs:25:1
    |
25  | pub struct OpenAIClient {
    | ----------------------- function or associated item `mock` not found for this struct

error[E0599]: no function or associated item named `mock` found for struct `llm::client::OpenAIClient` in the current scope
   --> src/services/memory/classification.rs:244:72
    |
244 |         let classifier = MessageClassifier::new(Arc::new(OpenAIClient::mock()));
    |                                                                        ^^^^ function or associated item not found in `OpenAIClient`
    |
   ::: src/llm/client/mod.rs:25:1
    |
25  | pub struct OpenAIClient {
    | ----------------------- function or associated item `mock` not found for this struct

error[E0308]: mismatched types
   --> src/services/memory/classification.rs:249:19
    |
249 |             lang: Some("rust".to_string()),
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^ expected `String`, found `Option<String>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<std::string::String>`

error[E0599]: no function or associated item named `mock` found for struct `llm::client::OpenAIClient` in the current scope
   --> src/services/memory/classification.rs:260:72
    |
260 |         let classifier = MessageClassifier::new(Arc::new(OpenAIClient::mock()));
    |                                                                        ^^^^ function or associated item not found in `OpenAIClient`
    |
   ::: src/llm/client/mod.rs:25:1
    |
25  | pub struct OpenAIClient {
    | ----------------------- function or associated item `mock` not found for this struct

error[E0599]: no function or associated item named `mock` found for struct `llm::client::OpenAIClient` in the current scope
   --> src/services/memory/classification.rs:276:72
    |
276 |         let classifier = MessageClassifier::new(Arc::new(OpenAIClient::mock()));
    |                                                                        ^^^^ function or associated item not found in `OpenAIClient`
    |
   ::: src/llm/client/mod.rs:25:1
    |
25  | pub struct OpenAIClient {
    | ----------------------- function or associated item `mock` not found for this struct

error[E0308]: mismatched types
   --> src/services/memory/classification.rs:282:19
    |
282 |             lang: Some("python".to_string()),
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `String`, found `Option<String>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<std::string::String>`

error[E0599]: no function or associated item named `mock` found for struct `llm::client::OpenAIClient` in the current scope
   --> src/services/memory/embedding.rs:239:68
    |
239 |         let manager = EmbeddingManager::new(Arc::new(OpenAIClient::mock())).unwrap();
    |                                                                    ^^^^ function or associated item not found in `OpenAIClient`
    |
   ::: src/llm/client/mod.rs:25:1
    |
25  | pub struct OpenAIClient {
    | ----------------------- function or associated item `mock` not found for this struct

error[E0599]: no function or associated item named `mock` found for struct `llm::client::OpenAIClient` in the current scope
   --> src/services/memory/embedding.rs:250:68
    |
250 |         let manager = EmbeddingManager::new(Arc::new(OpenAIClient::mock())).unwrap();
    |                                                                    ^^^^ function or associated item not found in `OpenAIClient`
    |
   ::: src/llm/client/mod.rs:25:1
    |
25  | pub struct OpenAIClient {
    | ----------------------- function or associated item `mock` not found for this struct

error[E0599]: no function or associated item named `mock` found for struct `llm::client::OpenAIClient` in the current scope
   --> src/services/memory/embedding.rs:260:68
    |
260 |         let manager = EmbeddingManager::new(Arc::new(OpenAIClient::mock())).unwrap();
    |                                                                    ^^^^ function or associated item not found in `OpenAIClient`
    |
   ::: src/llm/client/mod.rs:25:1
    |
25  | pub struct OpenAIClient {
    | ----------------------- function or associated item `mock` not found for this struct

error[E0599]: no function or associated item named `mock` found for struct `llm::client::OpenAIClient` in the current scope
   --> src/services/memory/summarization.rs:305:70
    |
305 |         let engine = SummarizationEngine::new(Arc::new(OpenAIClient::mock()));
    |                                                                      ^^^^ function or associated item not found in `OpenAIClient`
    |
   ::: src/llm/client/mod.rs:25:1
    |
25  | pub struct OpenAIClient {
    | ----------------------- function or associated item `mock` not found for this struct

error[E0599]: no function or associated item named `mock` found for struct `llm::client::OpenAIClient` in the current scope
   --> src/services/memory/summarization.rs:324:70
    |
324 |         let engine = SummarizationEngine::new(Arc::new(OpenAIClient::mock()));
    |                                                                      ^^^^ function or associated item not found in `OpenAIClient`
    |
   ::: src/llm/client/mod.rs:25:1
    |
25  | pub struct OpenAIClient {
    | ----------------------- function or associated item `mock` not found for this struct

error[E0599]: no function or associated item named `mock` found for struct `llm::client::OpenAIClient` in the current scope
   --> src/services/memory/summarization.rs:357:70
    |
357 |         let engine = SummarizationEngine::new(Arc::new(OpenAIClient::mock()));
    |                                                                      ^^^^ function or associated item not found in `OpenAIClient`
    |
   ::: src/llm/client/mod.rs:25:1
    |
25  | pub struct OpenAIClient {
    | ----------------------- function or associated item `mock` not found for this struct

Some errors have detailed explanations: E0308, E0599.
For more information about an error, try `rustc --explain E0308`.
warning: `mira-backend` (bin "mira-backend" test) generated 10 warnings (6 duplicates)
error: could not compile `mira-backend` (bin "mira-backend" test) due to 12 previous errors; 10 warnings emitted
warning: `mira-backend` (lib test) generated 8 warnings (8 duplicates)
error: could not compile `mira-backend` (lib test) due to 12 previous errors; 8 warnings emitted
